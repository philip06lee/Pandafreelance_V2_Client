{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\philipslee\\\\Panda 1.1\\\\client\\\\src\\\\components\\\\PostDetails\\\\CommentSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = _ref => {\n  _s();\n  var _user$result2;\n  let {\n    post\n  } = _ref;\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n  const handleComment = async () => {\n    var _user$result;\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`, post._id));\n    setComment('');\n    setComments(newComments);\n    commentsRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentsOuterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.commentsInnerContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"subtitle1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: c.split(': ')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), c.split(':')[1]]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: commentsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Write a comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Comment\",\n          multiline: true,\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: '10px'\n          },\n          fullWidth: true,\n          disabled: !comment.length,\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: handleComment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"BpxSdSokqHhqJHGTkjkVcsrg5ns=\", false, function () {\n  return [useDispatch, useStyles];\n});\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","commentPost","useStyles","CommentSection","post","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","comments","setComments","classes","commentsRef","handleComment","newComments","result","name","_id","current","scrollIntoView","behavior","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"sources":["C:/Users/philipslee/Panda 1.1/client/src/components/PostDetails/CommentSection.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Typography, TextField, Button } from '@material-ui/core/';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { commentPost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst CommentSection = ({ post }) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const [comment, setComment] = useState('');\r\n  const dispatch = useDispatch();\r\n  const [comments, setComments] = useState(post?.comments);\r\n  const classes = useStyles();\r\n  const commentsRef = useRef();\r\n\r\n  const handleComment = async () => {\r\n    const newComments = await dispatch(commentPost(`${user?.result?.name}: ${comment}`, post._id));\r\n\r\n    setComment('');\r\n    setComments(newComments);\r\n\r\n    commentsRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.commentsOuterContainer}>\r\n        <div className={classes.commentsInnerContainer}>\r\n          <Typography gutterBottom variant=\"h6\">Comments</Typography>\r\n          {comments?.map((c, i) => (\r\n            <Typography key={i} gutterBottom variant=\"subtitle1\">\r\n              <strong>{c.split(': ')[0]}</strong>\r\n              {c.split(':')[1]}\r\n            </Typography>\r\n          ))}\r\n          <div ref={commentsRef} />\r\n        </div>\r\n\r\n        {user?.result?.name && (\r\n        <div style={{ width: '70%' }}>\r\n          <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\r\n          <TextField fullWidth rows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\r\n          <br />\r\n          <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\r\n            Comment\r\n          </Button>\r\n        </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}